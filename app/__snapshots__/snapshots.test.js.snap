exports[`Component snapshots renders a current task component 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "backgroundColor": "#8bc34a",
      "height": undefined,
      "position": "relative",
    }
  }>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "#fff",
        "borderBottomWidth": 0.5,
        "borderColor": "#eee",
        "height": undefined,
        "paddingBottom": 20,
        "paddingLeft": 35,
        "paddingRight": 35,
        "paddingTop": 20,
        "transform": Array [
          Object {
            "translateX": 0,
          },
        ],
      }
    }
    testID="Task">
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "fontSize": 14,
          "fontWeight": "300",
          "marginBottom": 10,
        }
      }>
      Current Task
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#999",
              "fontSize": 12,
              "fontWeight": "300",
            },
            Object {
              "flex": 1,
            },
          ]
        }>
        2 hours ago
      </Text>
    </View>
  </View>
</View>
`;

exports[`Component snapshots renders a deferred task component 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "backgroundColor": "#03a9f4",
      "height": undefined,
      "position": "relative",
    }
  }>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "#fff",
        "borderBottomWidth": 0.5,
        "borderColor": "#eee",
        "height": undefined,
        "paddingBottom": 20,
        "paddingLeft": 35,
        "paddingRight": 35,
        "paddingTop": 20,
        "transform": Array [
          Object {
            "translateX": 0,
          },
        ],
      }
    }
    testID="Task">
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "fontSize": 14,
          "fontWeight": "300",
          "marginBottom": 10,
        }
      }>
      Deferred Task
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#999",
              "fontSize": 12,
              "fontWeight": "300",
            },
            Object {
              "flex": 1,
            },
          ]
        }>
        in 6 hours
      </Text>
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#999",
                "fontSize": 12,
                "fontWeight": "300",
              },
              Object {
                "backgroundColor": "transparent",
                "fontFamily": "GLYPHICONS Halflings",
              },
              Object {
                "marginRight": 4,
              },
            ]
          }>
          î„£
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#999",
                "fontSize": 12,
                "fontWeight": "300",
              },
            ]
          }>
          Tomorrow at 5:29 PM
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Component snapshots renders a done task component 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "backgroundColor": "#fff",
      "height": undefined,
      "position": "relative",
    }
  }>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "#fff",
        "borderBottomWidth": 0.5,
        "borderColor": "#eee",
        "height": undefined,
        "paddingBottom": 20,
        "paddingLeft": 35,
        "paddingRight": 35,
        "paddingTop": 20,
        "transform": Array [
          Object {
            "translateX": 0,
          },
        ],
      }
    }
    testID="Task">
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "fontSize": 14,
          "fontWeight": "300",
          "marginBottom": 10,
        }
      }>
      Done Task
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#999",
              "fontSize": 12,
              "fontWeight": "300",
            },
            Object {
              "flex": 1,
            },
          ]
        }>
        in 6 hours
      </Text>
    </View>
  </View>
</View>
`;

exports[`Component snapshots renders an empty list component with message 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "marginTop": 20,
        "textAlign": "center",
      }
    }>
    This list is empty
  </Text>
</View>
`;

exports[`Component snapshots renders the component 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "borderTopColor": "#d9dbdb",
      "borderTopWidth": 1,
      "padding": 10,
    }
  }>
  <TextInput
    autoCapitalize="sentences"
    blurOnSubmit={true}
    enablesReturnKeyAutomatically={true}
    onChange={[Function]}
    onSubmitEditing={[Function]}
    style={
      Object {
        "height": 19,
      }
    }
    testID="Add Task"
    value="" />
</View>
`;

exports[`Component snapshots renders the header component 1`] = `
<View
  style={
    Object {
      "borderBottomWidth": 1,
      "borderColor": "#d9dbdb",
    }
  }>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "fontSize": 29,
        "fontWeight": "300",
        "paddingBottom": 20,
        "paddingLeft": 32,
        "paddingRight": 32,
        "paddingTop": 20,
      }
    }>
    Remindr
  </Text>
</View>
`;

exports[`Component snapshots renders the navigation component 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "borderTopColor": "#d9dbdb",
      "borderTopWidth": 1,
    }
  }>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel="navigation-deferred"
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontSize": 11,
              "fontWeight": "300",
              "padding": 12,
            },
          ]
        }>
        DEFERRED
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel="navigation-current"
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontSize": 11,
              "fontWeight": "300",
              "padding": 12,
            },
            Object {
              "backgroundColor": "#03a9f4",
            },
            Object {
              "color": "#fff",
            },
          ]
        }>
        CURRENT
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel="navigation-done"
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontSize": 11,
              "fontWeight": "300",
              "padding": 12,
            },
          ]
        }>
        COMPLETE
      </Text>
    </View>
  </View>
</View>
`;

exports[`Component snapshots renders the task list component 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }>
  <ScrollView
    dataSource={
      ListViewDataSource {
        "items": 2,
      }
    }
    initialListSize={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={1000}
    onKeyboardDidHide={undefined}
    onKeyboardDidShow={undefined}
    onKeyboardWillHide={undefined}
    onKeyboardWillShow={undefined}
    onLayout={[Function]}
    onScroll={[Function]}
    pageSize={1}
    removeClippedSubviews={true}
    renderRow={[Function]}
    scrollEventThrottle={50}
    scrollRenderAheadDistance={1000}
    stickyHeaderIndices={Array []}>
    <View
      onLayout={[Function]}
      style={
        Object {
          "backgroundColor": "#8bc34a",
          "height": undefined,
          "position": "relative",
        }
      }>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "borderBottomWidth": 0.5,
            "borderColor": "#eee",
            "height": undefined,
            "paddingBottom": 20,
            "paddingLeft": 35,
            "paddingRight": 35,
            "paddingTop": 20,
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
          }
        }
        testID="Task">
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "marginBottom": 10,
            }
          }>
          Test task 1
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#999",
                  "fontSize": 12,
                  "fontWeight": "300",
                },
                Object {
                  "flex": 1,
                },
              ]
            }>
            in 6 hours
          </Text>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "backgroundColor": "#8bc34a",
          "height": undefined,
          "position": "relative",
        }
      }>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "borderBottomWidth": 0.5,
            "borderColor": "#eee",
            "height": undefined,
            "paddingBottom": 20,
            "paddingLeft": 35,
            "paddingRight": 35,
            "paddingTop": 20,
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
          }
        }
        testID="Task">
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "marginBottom": 10,
            }
          }>
          Test task 2
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#999",
                  "fontSize": 12,
                  "fontWeight": "300",
                },
                Object {
                  "flex": 1,
                },
              ]
            }>
            in 6 hours
          </Text>
        </View>
      </View>
    </View>
  </ScrollView>
</View>
`;
